@page "/devices"
@using BlazorFront.Models
@using Syncfusion.Blazor.Grids
@inject NavigationManager UriHelper
@inject AuthenticationStateProvider GetAuthenticationStateAsync
@attribute [Authorize(Roles = "Administrator, Manager, User")]


@{
    var SearchTool = new List<string>() { "Search" };
    System.Threading.Thread.CurrentThread.CurrentUICulture = new System.Globalization.CultureInfo("pl");
}


<SfGrid ClipMode="ClipMode.EllipsisWithTooltip" DataSource="@Device" GridLines="GridLine.Both" AllowTextWrap="true" AllowSorting="true" AllowPaging="true" AllowFiltering="true" Toolbar="@SearchTool">
    <GridTextWrapSettings WrapMode="WrapMode.Header"></GridTextWrapSettings>
    <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel"></GridFilterSettings>
    <GridPageSettings PageSize="5" PageCount="4" PageSizes="@pagerDropdown"></GridPageSettings>
    <GridEvents CommandClicked="CommandClickHandler" OnRecordDoubleClick="RecordDoubleClickHandler" TValue="DeviceData"></GridEvents>
    <GridColumns>
        <GridColumn Field="@nameof(DeviceData.Id)" HeaderText="ID" Width="80"></GridColumn>
        <GridColumn Field="@nameof(DeviceData.Name)" HeaderText="Nazwa"></GridColumn>
        <GridColumn Field="@nameof(DeviceData.NameInPassport)" HeaderText="Nazwa paszportowa" Width="200"></GridColumn>
        <GridColumn Field="@nameof(DeviceData.AcquisitionDate)" HeaderText="Data nabycia"></GridColumn>
        <GridColumn Field="@nameof(DeviceData.ProductionDate)" HeaderText="Data produkcji"></GridColumn>
        <GridColumn Field="@nameof(DeviceData.PassportNumber)" HeaderText="Numer paszportu"></GridColumn>
        <GridColumn Field="@nameof(DeviceData.InventoryNumber)" HeaderText="Numer inwentarzowy" Width="100"></GridColumn>
        <GridColumn Field="@nameof(DeviceData.SerialNumber)" HeaderText="Numer seryjny"></GridColumn>
        <GridColumn Field="@nameof(DeviceData.Comments)" HeaderText="Komentarz"></GridColumn>
        <GridColumn Field="@nameof(DeviceData.Ward)" HeaderText="Oddział"></GridColumn>
        <GridColumn Field="@nameof(DeviceData.Producer)" HeaderText="Producent"></GridColumn>
        <GridColumn HeaderText="Akcje" Width="60">
            <GridCommandColumns>
                <GridCommandColumn Type="CommandButtonType.None" ButtonOption="@(new CommandButtonOptions()
                     {
                         IconCss = "e-icons e-description",
                         CssClass = "e-flat"
                     })"></GridCommandColumn>
            </GridCommandColumns>
        </GridColumn>
    </GridColumns>
</SfGrid>
<style>
    .e-grid .e-headercell {
        background-color: #00b4d8;
    }

    .e-headercell {
        color: white;
        font-size: 1.5rem;
        font-weight: bold;
    }
</style>

@code{

    public string[] pagerDropdown { get; set; } = new string[] { "5", "10", "15", "20" };

    public DeviceResults Datas { get; set; }

    public List<DeviceData> Device { get; set; }

    [Inject]
    public IDeviceService DeviceService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authstate = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
        var user = authstate.User;
        var name = user.Identity.Name;
        Datas = (await DeviceService.GetDevices());
        Device = Datas.devices;
    }


    public void CommandClickHandler(CommandClickEventArgs<DeviceData> args)
    {
        if (args.CommandColumn.Type == CommandButtonType.None)
        {
             UriHelper.NavigateTo($"/devicedetails/{args.RowData.Id}");
        }
    }

    public void RecordDoubleClickHandler(RecordDoubleClickEventArgs<DeviceData> args)
    {
        UriHelper.NavigateTo($"/devicedetails/{args.RowData.Id}");
    }
}
